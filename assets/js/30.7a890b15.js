(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{420:function(t,a,s){"use strict";s.r(a);var e=s(28),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"react-note"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-note"}},[t._v("#")]),t._v(" React note")]),t._v(" "),s("p",[s("strong",[t._v("目录")])]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#react"}},[t._v("React")]),s("ul",[s("li",[s("a",{attrs:{href:"#react-是单向数据流还是双向数据流-它还有其他特点吗"}},[t._v("React 是单向数据流还是双向数据流？它还有其他特点吗？")])]),s("li",[s("a",{attrs:{href:"#react-通过什么方式来更新数据"}},[t._v("React 通过什么方式来更新数据")])]),s("li",[s("a",{attrs:{href:"#react-不能直接修改-state-吗"}},[t._v("React 不能直接修改 State 吗？")])]),s("li",[s("a",{attrs:{href:"#setstate-是同步还是异步的"}},[t._v("setState 是同步还是异步的？")])]),s("li",[s("a",{attrs:{href:"#函数组件是什么-与类组件有什么区别"}},[t._v("函数组件是什么？与类组件有什么区别？")])]),s("li",[s("a",{attrs:{href:"#受控组件与非受控组件的区别"}},[t._v("受控组件与非受控组件的区别")])]),s("li",[s("a",{attrs:{href:"#react中的合成事件是什么"}},[t._v("React中的合成事件是什么？")])]),s("li",[s("a",{attrs:{href:"#为什么浏览器无法读取jsx"}},[t._v("为什么浏览器无法读取JSX？")])]),s("li",[s("a",{attrs:{href:"#react-生命周期"}},[t._v("React 生命周期")])]),s("li",[s("a",{attrs:{href:"#react-组件通信"}},[t._v("React 组件通信")])]),s("li",[s("a",{attrs:{href:"#react-context-怎么使用"}},[t._v("React.Context 怎么使用")])]),s("li",[s("a",{attrs:{href:"#react-怎么做代码复用"}},[t._v("React 怎么做代码复用")])]),s("li",[s("a",{attrs:{href:"#高阶函数、高阶组件是什么"}},[t._v("高阶函数、高阶组件是什么？")])]),s("li",[s("a",{attrs:{href:"#渲染列表为啥要用-key"}},[t._v("渲染列表为啥要用 key？")])]),s("li",[s("a",{attrs:{href:"#虚拟-dom-是如何提升性能的"}},[t._v("虚拟 dom 是如何提升性能的")])]),s("li",[s("a",{attrs:{href:"#可以描述一下-react-diffing-算法吗"}},[t._v("可以描述一下 React Diffing 算法吗？")])]),s("li",[s("a",{attrs:{href:"#react-性能优化"}},[t._v("React 性能优化")])]),s("li",[s("a",{attrs:{href:"#父组件在执行-render-时会不会触发子组件的-render-事件-如果会该怎么避免"}},[t._v("父组件在执行 render 时会不会触发子组件的 render 事件？如果会该怎么避免？")])]),s("li",[s("a",{attrs:{href:"#异步组件怎么使用"}},[t._v("异步组件怎么使用？")])]),s("li",[s("a",{attrs:{href:"#jsx-是如何编译为-js-代码的"}},[t._v("JSX 是如何编译为 js 代码的？")])]),s("li",[s("a",{attrs:{href:"#hooks-相比-class-的优点"}},[t._v("Hooks 相比 class 的优点")])]),s("li",[s("a",{attrs:{href:"#hooks-的使用"}},[t._v("Hooks 的使用")])]),s("li",[s("a",{attrs:{href:"#自定义-hook-怎么使用"}},[t._v("自定义 Hook 怎么使用")])]),s("li",[s("a",{attrs:{href:"#hook-使用约束"}},[t._v("Hook 使用约束")])]),s("li",[s("a",{attrs:{href:"#hooks-怎么实现-class-组件的功能"}},[t._v("Hooks 怎么实现 class 组件的功能")])]),s("li",[s("a",{attrs:{href:"#有了解过-portals-吗"}},[t._v("有了解过 Portals 吗?")])]),s("li",[s("a",{attrs:{href:"#什么是-react-fiber"}},[t._v("什么是 React Fiber?")])]),s("li",[s("a",{attrs:{href:"#怎么对组件的参数做类型约束呢"}},[t._v("怎么对组件的参数做类型约束呢?")])]),s("li",[s("a",{attrs:{href:"#组件设计原则"}},[t._v("组件设计原则")])])])]),s("li",[s("a",{attrs:{href:"#redux"}},[t._v("Redux")]),s("ul",[s("li",[s("a",{attrs:{href:"#什么场景会考虑使用状态管理器"}},[t._v("什么场景会考虑使用状态管理器")])]),s("li",[s("a",{attrs:{href:"#redux是什么-它遵循什么原则吗"}},[t._v("redux是什么? 它遵循什么原则吗?")])]),s("li",[s("a",{attrs:{href:"#描述-redux-单向数据流"}},[t._v("描述 redux 单向数据流")])])])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"react"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react"}},[t._v("#")]),t._v(" React")]),t._v(" "),s("h3",{attrs:{id:"react-是单向数据流还是双向数据流-它还有其他特点吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-是单向数据流还是双向数据流-它还有其他特点吗"}},[t._v("#")]),t._v(" React 是单向数据流还是双向数据流？它还有其他特点吗？")]),t._v(" "),s("ul",[s("li",[t._v("React 是单向数据流，数据是从上向下流")]),t._v(" "),s("li",[t._v("声明式编写 UI")]),t._v(" "),s("li",[t._v("组件化开发")])]),t._v(" "),s("h3",{attrs:{id:"react-通过什么方式来更新数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-通过什么方式来更新数据"}},[t._v("#")]),t._v(" React 通过什么方式来更新数据")]),t._v(" "),s("p",[t._v("React 是通过 "),s("code",[t._v("setState")]),t._v(" 来更新数据的。调用多个 "),s("code",[t._v("setState")]),t._v(" 不会立即更新数据，而是批量延迟更新后再将数据合并。")]),t._v(" "),s("p",[t._v("除了 "),s("code",[t._v("setState")]),t._v(" 外还可以使用 "),s("code",[t._v("forceUpdate")]),t._v(" 跳过当前组件的 "),s("code",[t._v("shouldComponentUpdate")]),t._v(" 对比，强制触发组件渲染(避免使用该方式)。")]),t._v(" "),s("h3",{attrs:{id:"react-不能直接修改-state-吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-不能直接修改-state-吗"}},[t._v("#")]),t._v(" React 不能直接修改 State 吗？")]),t._v(" "),s("ol",[s("li",[t._v("直接修改 state 不会触发组件的渲染。")]),t._v(" "),s("li",[t._v("若直接修改 state 引用的值，在实际使用时会导致错误的值出现")]),t._v(" "),s("li",[t._v("修改后的 state 可能会被后续调用的 "),s("code",[t._v("setState")]),t._v(" 覆盖")])]),t._v(" "),s("h3",{attrs:{id:"setstate-是同步还是异步的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setstate-是同步还是异步的"}},[t._v("#")]),t._v(" setState 是同步还是异步的？")]),t._v(" "),s("p",[t._v("出于性能的考虑，可能会把多个 "),s("code",[t._v("setState")]),t._v(" 合并成一个调用。")]),t._v(" "),s("p",[t._v("在 React 控制的生命周期、React 封装的事件处理器中直接使用是异步的(命中 "),s("code",[t._v("batchUpdate")]),t._v(" 机制，"),s("code",[t._v("isBatchingUpdate")]),t._v(" 的标志位为 "),s("code",[t._v("true")]),t._v(")。比如 React中注册的 "),s("code",[t._v("onClick")]),t._v(" 事件或是 "),s("code",[t._v("componentDidMount")]),t._v(" 中直接使用都是异步的。")]),t._v(" "),s("p",[t._v("可以给 "),s("code",[t._v("setState")]),t._v(" 第二个参数传递一个函数，该函数是"),s("strong",[t._v("数据更新后会触发的回调函数")]),t._v("。在该函数中可以拿到更新后最新的值。")]),t._v(" "),s("p",[t._v("在 React 控制外中使用 "),s("code",[t._v("setState")]),t._v(" 是同步的，比如在  "),s("code",[t._v("setTimeout")]),t._v(", 或者是原生的事件监听器中使用都是同步的。")]),t._v(" "),s("h3",{attrs:{id:"函数组件是什么-与类组件有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数组件是什么-与类组件有什么区别"}},[t._v("#")]),t._v(" 函数组件是什么？与类组件有什么区别？")]),t._v(" "),s("p",[t._v("函数组件本质上是一个纯函数，它接受 props 属性，最后返回 JSX。")]),t._v(" "),s("p",[t._v("与类组件的差别在于: 它没有实例、不能通过 "),s("code",[t._v("extends")]),t._v(" 继承于其他方法、也没有生命周期和 "),s("code",[t._v("state")]),t._v("(但可以引入 "),s("code",[t._v("Hooks")]),t._v(" 来处理没有生命周期和 "),s("code",[t._v("state")]),t._v(" 的问题)。")]),t._v(" "),s("h3",{attrs:{id:"受控组件与非受控组件的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#受控组件与非受控组件的区别"}},[t._v("#")]),t._v(" 受控组件与非受控组件的区别")]),t._v(" "),s("p",[t._v("受控组件主要是指表单的值受到 "),s("code",[t._v("state")]),t._v(" 的控制，它需要自行监听 "),s("code",[t._v("onChange")]),t._v(" 事件来更新 "),s("code",[t._v("state")]),t._v("。")]),t._v(" "),s("p",[t._v("由于受控组件每次都要编写事件处理器才能更新 "),s("code",[t._v("state")]),t._v(" 数据、可能会有点麻烦，React 提供另一种代替方案是"),s("strong",[t._v("非受控组件")]),t._v("。")]),t._v(" "),s("p",[t._v("非受控组件将"),s("strong",[t._v("真实数据储存在 DOM 节点")]),t._v("中,它可以为表单项设置默认值，不需要手动更新数据。当需要用到表单数据时再通过 "),s("code",[t._v("ref")]),t._v(" 从 DOM 节点中取出数据即可。")]),t._v(" "),s("p",[s("strong",[t._v("注意: 多数情况下React 推荐编写受控组件。")])]),t._v(" "),s("p",[t._v("扩展资料: "),s("a",{attrs:{href:"https://goshakkk.name/controlled-vs-uncontrolled-inputs-react/",target:"_blank",rel:"noopener noreferrer"}},[t._v("受控和非受控制使用场景的选择"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"react中的合成事件是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react中的合成事件是什么"}},[t._v("#")]),t._v(" React中的合成事件是什么？")]),t._v(" "),s("p",[t._v("合成事件是围绕浏览器原生事件充当跨浏览器包装器的对象。它们将不同浏览器的行为合并为一个 API。这样做是为了确保事件在不同浏览器中显示一致的属性。")]),t._v(" "),s("h3",{attrs:{id:"为什么浏览器无法读取jsx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么浏览器无法读取jsx"}},[t._v("#")]),t._v(" 为什么浏览器无法读取JSX？")]),t._v(" "),s("p",[t._v("浏览器只能处理 JavaScript 对象，而不能读取常规 JavaScript 对象中的 JSX。所以为了使浏览器能够读取 JSX，首先，需要用像 Babel 这样的 JSX 转换器将 JSX 文件转换为 JavaScript 对象，然后再将其传给浏览器。")]),t._v(" "),s("h3",{attrs:{id:"react-生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-生命周期"}},[t._v("#")]),t._v(" React 生命周期")]),t._v(" "),s("p",[t._v("针对 React 生命周期中函数的调用顺序，笔者写了一个简易的 Demo 用于演示: "),s("a",{attrs:{href:"https://codesandbox.io/s/react-lifecycle-forked-2dvdg?file=/src/Parent.jsx",target:"_blank",rel:"noopener noreferrer"}},[t._v("React 父子组件生命周期示例"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("strong",[t._v("React 组件挂载阶段")]),t._v("先后会触发 "),s("code",[t._v("constuctor")]),t._v("、"),s("code",[t._v("static getDerivedStateFromProps")]),t._v("、"),s("code",[t._v("render")]),t._v("、"),s("code",[t._v("componentDidMount")]),t._v(" 函数。若 "),s("code",[t._v("render")]),t._v(" 函数内还有子组件存在的话，则会进一步递归:")]),t._v(" "),s("div",{staticClass:"language-log extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[Parent]: constuctor\n[Parent]: static getDerivedStateFromProps\n[Parent]: render\n[Children]: constuctor\n[Children]: static getDerivedStateFromProps\n[Children]: render\n[Children]: componentDidMount\n[Children]: 挂载阶段结束!\n[Parent]: componentDidMount\n[Parent]: 挂载阶段结束!\n")])])]),s("p",[s("strong",[t._v("React 组件更新阶段")]),t._v("：主要是组件的 props 或 state 发生变化时触发。若组件内还有子组件，则子组件会判断是否也需要触发更新。默认情况下 "),s("code",[t._v("component")]),t._v(" 组件是只要父组件发生了变化，子组件也会跟着变化。以下是更新父组件 "),s("code",[t._v("state")]),t._v(" 数据时所触发的生命周期函数:")]),t._v(" "),s("div",{staticClass:"language-log extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[Parent]: static getDerivedStateFromProps\n[Parent]: shouldComponentUpdate\n[Parent]: render\n[Children]: static getDerivedStateFromProps\n[Children]: shouldComponentUpdate\n[Children]: render\n[Children]: getSnapshotBeforeUpdate\n[Parent]: getSnapshotBeforeUpdate\n[Children]: componentDidUpdate\n[Children]: 更新阶段结束!\n[Parent]: componentDidUpdate\n[Parent]: 更新阶段结束!\n")])])]),s("p",[s("strong",[t._v("React 组件销毁阶段")]),t._v("：父组件先触发销毁前的函数，再逐层向下触发:")]),t._v(" "),s("div",{staticClass:"language-log extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[Parent]: componentWillUnmount\n[Parent]: 卸载阶段结束!\n[Children]: componentWillUnmount\n[Children]: 卸载阶段结束!\n")])])]),s("h3",{attrs:{id:"react-组件通信"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-组件通信"}},[t._v("#")]),t._v(" React 组件通信")]),t._v(" "),s("ul",[s("li",[t._v("父组件通过 props 给子组件传参，子组件通过触发父组件提供的回调函数来给父组件传递数据")]),t._v(" "),s("li",[t._v("React.Context")]),t._v(" "),s("li",[t._v("自定义事件")]),t._v(" "),s("li",[t._v("redux/mobx 之类的状态管理器")])]),t._v(" "),s("h3",{attrs:{id:"react-context-怎么使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-context-怎么使用"}},[t._v("#")]),t._v(" React.Context 怎么使用")]),t._v(" "),s("p",[s("code",[t._v("Context")]),t._v(" 可以共享对于组件树而言是全局的数据，比如全局主题、首选语言等。使用方式如下：")]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("React.createContext")]),t._v(" 函数用于生成 "),s("code",[t._v("Context")]),t._v(" 对象。可以在创建时给 "),s("code",[t._v("Context")]),t._v(" 设置默认值：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ThemeContext "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'light'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Context")]),t._v(" 对象中有一个 "),s("code",[t._v("Provider(提供者)")]),t._v(" 组件，"),s("code",[t._v("Provider")]),t._v(" 组件接受一个 "),s("code",[t._v("value")]),t._v(" 属性用以将数据传递给消费组件。")]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ThemeContext.Provider")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("dark"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n  ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("page")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ThemeContext.Provider")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("获取 "),s("code",[t._v("Context")]),t._v(" 提供的值可以通过 "),s("code",[t._v("contextType")]),t._v(" 或者 "),s("code",[t._v("Consumer(消费者)")]),t._v(" 组件中获取。"),s("code",[t._v("contextType")]),t._v(" 只能用于类组件，并且只能挂载一个 "),s("code",[t._v("Context")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyClass")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("componentDidMount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 在组件挂载完成后，使用 MyContext 的值执行一些有副作用的操作 */")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 基于 MyContext 的值进行渲染 */")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nMyClass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("contextType "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" MyContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("若想给组件挂载多个 "),s("code",[t._v("Context")]),t._v(", 或者在函数组件内使用 "),s("code",[t._v("Context")]),t._v(" 可以使用 "),s("code",[t._v("Consumer")]),t._v(" 组件:")]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ThemeContext.Consumer")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n  ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("theme")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserContext.Consumer")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n      ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("user")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProfilePage")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("user")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("theme")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("theme"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n    ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserContext.Consumer")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ThemeContext.Consumer")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])])]),t._v(" "),s("p",[s("code",[t._v("Context")]),t._v(" 通常适用于传递较为简单的数据信息，若数据太过复杂，还是需要引入状态管理(redux/mbox)。")]),t._v(" "),s("h3",{attrs:{id:"react-怎么做代码复用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-怎么做代码复用"}},[t._v("#")]),t._v(" React 怎么做代码复用")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://react.html.cn/docs/render-props.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Render Props"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("高阶组件 (HOC)")]),t._v(" "),s("li",[t._v("自定义 Hooks")]),t._v(" "),s("li",[t._v("Mixins (已被 React 废弃的方案)")])]),t._v(" "),s("p",[s("code",[t._v("Render props")]),t._v(" 是一种在 React 组件之间共享代码的简单技术。具体的行为是:")]),t._v(" "),s("ol",[s("li",[t._v("子组件接收一个用于渲染指定视图的 "),s("code",[t._v("prop")]),t._v(" 属性，该属性的类型是函数。")]),t._v(" "),s("li",[t._v("父组件在组件内部定义该函数后，将函数的引入传给子组件")]),t._v(" "),s("li",[t._v("子组件将组件内部 "),s("code",[t._v("state")]),t._v(" 作为实参传给从外面传来的函数，并将函数的返回结果渲染在指定的视图区域。")])]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 组件使用")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Mouse")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("x: ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v(", y: ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 组件内部大致实现")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Mouse")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("section")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n        ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("header")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("头部信息")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("header")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n        ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n        ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("footer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("底部信息")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("footer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n      ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("section")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("准确来说 "),s("code",[t._v("Render props")]),t._v(" 是一个用于告知组件需要渲染什么内容的函数属性。"),s("code",[t._v("props")]),t._v(" 的命名可以由自己定义，比如用于在内容区域渲染的 prop 名可以叫 "),s("code",[t._v("render")]),t._v("，同时还可以再接收一个 "),s("code",[t._v("renderHead")]),t._v(" 的 prop 用于渲染头部的信息。")]),t._v(" "),s("h3",{attrs:{id:"高阶函数、高阶组件是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#高阶函数、高阶组件是什么"}},[t._v("#")]),t._v(" 高阶函数、高阶组件是什么？")]),t._v(" "),s("p",[s("strong",[t._v("高阶函数")]),t._v("就是"),s("strong",[t._v("接收其它函数作为参数")]),t._v("的函数就称之为高阶函数，像数组的 "),s("code",[t._v("map")]),t._v(" 、"),s("code",[t._v("sort")]),t._v("、"),s("code",[t._v("filter")]),t._v(" 都是高阶函数。")]),t._v(" "),s("p",[s("strong",[t._v("高阶组件(Higher-order component, HOC)")]),t._v(" 是 React 用于复用组件逻辑的一种高级技巧。它具体的行为是：")]),t._v(" "),s("p",[t._v("函数"),s("strong",[t._v("接收一个组件作为参数")]),t._v("，在函数体内"),s("strong",[t._v("定义一个新组件")]),t._v("，新组件内"),s("strong",[t._v("编写可复用的逻辑")]),t._v("并应用到参数组件中。最后再将"),s("strong",[t._v("新组件作为函数的返回值")]),t._v(" return 出去。\n"),s("code",[t._v("redux")]),t._v(" 中的 "),s("code",[t._v("connect")]),t._v(" 函数就是一个高阶组件。")]),t._v(" "),s("h3",{attrs:{id:"渲染列表为啥要用-key"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#渲染列表为啥要用-key"}},[t._v("#")]),t._v(" 渲染列表为啥要用 key？")]),t._v(" "),s("p",[t._v("渲染列表时，如果不给列表子项传 "),s("code",[t._v("key")]),t._v(" 的话，React 将默认使用 "),s("code",[t._v("index")]),t._v(" 作为 "),s("code",[t._v("key")]),t._v("，同时会在控制台发出警告。")]),t._v(" "),s("p",[s("code",[t._v("key")]),t._v(" 在兄弟节点之间必须唯一，要避免使用数组下标 "),s("code",[t._v("index")]),t._v(" 作为 "),s("code",[t._v("key")]),t._v("。因为使用数组下标作为 `key 时，若数组的顺序发生了改变，将会影响 Diffing 算法的效率。")]),t._v(" "),s("p",[t._v("若列表的节点是组件的话，还可能会影响组件的 "),s("code",[t._v("state")]),t._v(" 数据。因为组件实例是基于 "),s("code",[t._v("key")]),t._v(" 来决定是否更新与复用。当顺序发生了变化，则 "),s("code",[t._v("key")]),t._v(" 也会相应得被修改，从而导致子组件间的数据错乱。")]),t._v(" "),s("p",[t._v("React 使用的 Diffing 算法是通过 "),s("code",[t._v("tag")]),t._v(" 和 "),s("code",[t._v("key")]),t._v(" 判断是否是同一个元素("),s("code",[t._v("sameNode")]),t._v(")。使用唯一的 "),s("code",[t._v("key")]),t._v(" 有助于 React 识别哪些元素发生改变，如节点添加或删除。这样有助于减少渲染次数，从而优化性能。")]),t._v(" "),s("p",[t._v("如果数组中的数据没有唯一的 "),s("code",[t._v("key")]),t._v("，可以引入 "),s("a",{attrs:{href:"https://www.npmjs.com/package/shortid",target:"_blank",rel:"noopener noreferrer"}},[t._v("shortid"),s("OutboundLink")],1),t._v(" 预先给数组中每项数据生成唯一的 "),s("code",[t._v("id")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" shortid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'shortid'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" shortid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("generate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newList "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("addId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("若确定没有列表的顺序不会发生变化同时没有其他唯一的 "),s("code",[t._v("key")]),t._v(" 来标识列表项时才能使用数组的下标。")]),t._v(" "),s("h3",{attrs:{id:"虚拟-dom-是如何提升性能的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#虚拟-dom-是如何提升性能的"}},[t._v("#")]),t._v(" 虚拟 dom 是如何提升性能的")]),t._v(" "),s("p",[t._v("当组件触发更新时，虚拟 DOM 通过比对新旧 "),s("code",[t._v("state")]),t._v(" 和 "),s("code",[t._v("props")]),t._v(" 的变化以决定是否渲染 DOM 节点，从而减少渲染提升性能。因为修改真实 DOM 所耗费的性能远比操作 JavaScript 多几倍，因此使用虚拟 DOM 在渲染性能上会高效的多。")]),t._v(" "),s("h3",{attrs:{id:"可以描述一下-react-diffing-算法吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可以描述一下-react-diffing-算法吗"}},[t._v("#")]),t._v(" 可以描述一下 React Diffing 算法吗？")]),t._v(" "),s("p",[t._v("Diffing 算法(Diffing Algorithm) 会先比较两个根元素的变化:")]),t._v(" "),s("ol",[s("li",[t._v("当"),s("strong",[t._v("节点类型变化")]),t._v("时，将会卸载原有的树而建立新树。如父节点 "),s("code",[t._v("<div>")]),t._v(" 标签被修改为 "),s("code",[t._v("<section>")]),t._v(" 标签，则它们自身及 "),s("code",[t._v("children")]),t._v(" 下的节点都会被重新渲染。")]),t._v(" "),s("li",[t._v("当 "),s("strong",[t._v("DOM 节点类型相同")]),t._v("时，保留相同的 DOM 节点，仅更新发生改变的属性。")]),t._v(" "),s("li",[t._v("当"),s("strong",[t._v("组件类型相同时")]),t._v("，组件更新时组件实例保持不变，React 将更新组件实例的 props, 并调用生命周期 "),s("code",[t._v("componentWillReceiveProps()")]),t._v(" 和 "),s("code",[t._v("componentwillupdate()")]),t._v("，最后再调用 "),s("code",[t._v("render")]),t._v("。若 "),s("code",[t._v("render")]),t._v(" 中还有子组件，将递归触发 Diff。")]),t._v(" "),s("li",[t._v("当"),s("strong",[t._v("列表节点发生变化，列表项没有设置 key 时")]),t._v(", 那么 Diffing 算法会逐个对比节点的变化。如果是尾部新增节点，那 Diff 算法会 Diff 到列表末尾，仅新增元素即可，不会有其他的性能损耗。若新增的数据不在数组的尾部而是在中间，那么 Diffing 算法比较到中间时判断出节点发生变化，将会丢弃后面所有节点并重新渲染。")]),t._v(" "),s("li",[t._v("当"),s("strong",[t._v("列表节点发生变化，列表项有设置 key 时")]),t._v(", React 可以通过 "),s("code",[t._v("key")]),t._v(" 来匹配新旧节点间的对应关系，可以很快完成 Diff 并避免重复渲染的问题。")])]),t._v(" "),s("h3",{attrs:{id:"react-性能优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-性能优化"}},[t._v("#")]),t._v(" React 性能优化")]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("props/state")]),t._v(" 新旧值的变化来决定是否渲染组件。")]),t._v(" "),s("p",[t._v("React 可以通过 "),s("code",[t._v("shouldComponentUpdate")]),t._v(", "),s("code",[t._v("PureComponent")]),t._v(", "),s("code",[t._v("React.memo")]),t._v(" 来对组件渲染进行性能优化。")]),t._v(" "),s("p",[s("code",[t._v("shouldComponentUpdate")]),t._v(" 是 class 组件生命周期中的一个钩子，常用于 "),s("code",[t._v("component")]),t._v(" 中。")]),t._v(" "),s("p",[t._v("该钩子的返回值可以决定组件是否进行渲染，如果没有在组件内定义该钩子的逻辑，则默认返回 "),s("code",[t._v("true")]),t._v(", 这也就意味着 React 默认情况下是无条件渲染的。通常 "),s("code",[t._v("component")]),t._v(" 组件可以通过该钩子对比数据，以决定组件是否该渲染，从而避免重复渲染的问题。")]),t._v(" "),s("blockquote",[s("p",[t._v("值得注意的是，即便在 "),s("code",[t._v("shouldComponentUpdate")]),t._v(" 对新旧 props 使用深对比也不能破坏 React "),s("strong",[t._v("不可变值****不可变值")]),t._v("原值。\n因为直接改变 state 的数据再通过 setState 来更新数据，因为新旧数据的值是一致的(旧数据被修改)，也就不能触发渲染。")])])]),t._v(" "),s("li",[s("p",[t._v("列表渲染时每项添加唯一的 "),s("code",[t._v("key")]),t._v("。")])]),t._v(" "),s("li",[s("p",[t._v("定时器、DOM 事件等在组件销毁时一同销毁，从而避免内存泄露。")])]),t._v(" "),s("li",[s("p",[t._v("代码分割，使用异步组件。")])]),t._v(" "),s("li",[s("p",[t._v("Hooks 使用 "),s("code",[t._v("useMemo")]),t._v(" 缓存上一次计算的结果，避免重复计算值。")])])]),t._v(" "),s("h3",{attrs:{id:"父组件在执行-render-时会不会触发子组件的-render-事件-如果会该怎么避免"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#父组件在执行-render-时会不会触发子组件的-render-事件-如果会该怎么避免"}},[t._v("#")]),t._v(" 父组件在执行 render 时会不会触发子组件的 render 事件？如果会该怎么避免？")]),t._v(" "),s("p",[t._v("如果父组件渲染后，子组件接收的 props 也跟着发生了改变，那么默认情况下会触发子组件的渲染。")]),t._v(" "),s("p",[t._v("若子组件接收的 props 没有发生改变，那就得判断子组件的状况。")]),t._v(" "),s("p",[t._v("如果子组件是继承于 "),s("code",[t._v("component")]),t._v(" 声明的组件，并且没有使用 "),s("code",[t._v("shouldComponentUpdate")]),t._v(" 做避免重复渲染的处理，那么子组件会触发 render 事件。")]),t._v(" "),s("p",[t._v("为了避免重复渲染，类组件可以使用 "),s("code",[t._v("shouldComponentUpdate")]),t._v(" 来决定是否进行渲染。也可以将继承于 "),s("code",[t._v("component")]),t._v(" 组件改为继承 "),s("code",[t._v("PureComponment")]),t._v("，该组件会浅对比 "),s("code",[t._v("Props")]),t._v(" 是否进行改变，从而决定是否渲染组件。")]),t._v(" "),s("p",[t._v("如果是函数组件，可以通过 "),s("code",[t._v("React.memo")]),t._v(" 来对函数组件进行缓存。")]),t._v(" "),s("blockquote",[s("p",[t._v("问题本质上想问 React 性能优化的问题，可以参考上题答案。")])]),t._v(" "),s("h3",{attrs:{id:"异步组件怎么使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步组件怎么使用"}},[t._v("#")]),t._v(" 异步组件怎么使用？")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("通过动态 "),s("code",[t._v("import()")]),t._v(" 语法对组件代码进行分割。")])]),t._v(" "),s("li",[s("p",[t._v("使用 "),s("code",[t._v("React.lazy")]),t._v(" 函数，结合 "),s("code",[t._v("import()")]),t._v(" 语法引入动态组件。在组件首次渲染时，会自动导入包含 "),s("code",[t._v("MyComponent")]),t._v(" 的包。")]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" MyComponent "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lazy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./MyComponent'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("在 "),s("code",[t._v("React.Suspense")]),t._v(" 组件中渲染 "),s("code",[t._v("lazy")]),t._v(" 组件，同时可以使用 "),s("code",[t._v("fallback")]),t._v(" 做优雅降级(添加 "),s("code",[t._v("loading")]),t._v(" 效果):")]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React.Suspense")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("fallback")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("Loading...")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n  ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyComponent")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React.Suspense")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("封装一个错误捕获组件(比如组件命名为 "),s("code",[t._v("MyErrorBoundary")]),t._v(")，组件内通过生命周期 "),s("code",[t._v("getDerivedStateFromError")]),t._v(" 捕获错误信息。当异步组件加载失败时，将捕获到错误信息处理后给用户做错误提示功能。")]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyErrorBoundary")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n   ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React.Suspense")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("fallback")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("Loading...")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n    ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyComponent")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n  ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React.Suspense")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyErrorBoundary")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"jsx-是如何编译为-js-代码的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jsx-是如何编译为-js-代码的"}},[t._v("#")]),t._v(" JSX 是如何编译为 js 代码的？")]),t._v(" "),s("p",[t._v("在 React v17 之前，JSX 会被编译为 "),s("code",[t._v("React.createElement(component, props, ...children)")]),t._v(" 函数，执行会返回 "),s("code",[t._v("vnode")]),t._v("，"),s("code",[t._v("vnode")]),t._v(" 通过 "),s("code",[t._v("patch")]),t._v(" 之类的方法渲染到页面。")]),t._v(" "),s("p",[t._v("React v17 之后更新了 JSX 转换规则。新的 JSX 转换不会将 JSX 转换为 "),s("code",[t._v("React.createElement")]),t._v("，而是自动从 React 的 "),s("code",[t._v("package")]),t._v(" 中引入新的入口函数("),s("code",[t._v("react/jsx-runtime")]),t._v(")并调用。这意味着我们不用在每个组件文件中显式引入 "),s("code",[t._v("React")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"hooks-相比-class-的优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hooks-相比-class-的优点"}},[t._v("#")]),t._v(" Hooks 相比 class 的优点")]),t._v(" "),s("p",[t._v("类组件的不足:")]),t._v(" "),s("ul",[s("li",[t._v("状态逻辑复用难，缺少复用机制。渲染属性和高阶组件导致层级冗余")]),t._v(" "),s("li",[t._v("复杂组件变得难以理解")]),t._v(" "),s("li",[t._v("this 指向困扰")])]),t._v(" "),s("p",[t._v("Hooks 的优点:")]),t._v(" "),s("ul",[s("li",[t._v("自定义 Hook 方便复用状态逻辑")]),t._v(" "),s("li",[t._v("副作用的关注点分离")]),t._v(" "),s("li",[t._v("函数组件没有 this 问题")])]),t._v(" "),s("p",[t._v("Hooks 现有的不足:")]),t._v(" "),s("ul",[s("li",[t._v("不能完全代替 class 组件的生命周期，部分不常用的生命周期暂时没有实现")]),t._v(" "),s("li",[t._v("useEffect 等 Hook 的运作方式带来了一定的学习成本，需要转换现有的编程思维")])]),t._v(" "),s("h3",{attrs:{id:"hooks-的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hooks-的使用"}},[t._v("#")]),t._v(" Hooks 的使用")]),t._v(" "),s("blockquote",[s("p",[t._v("描述 Hooks 有哪些方法和大致用途")])]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("useState")]),t._v(": 使函数组件支持设置 "),s("code",[t._v("state")]),t._v(" 数据，可用于代替类组件的 "),s("code",[t._v("constructor")]),t._v(" 函数。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("useEffect")]),t._v(": 使函数组件支持操作副作用的能力，可以模拟类组件 "),s("code",[t._v("componentDidMount")]),t._v(" 的功能。同时还能监听数据变化，进而操作一系列诸如数据获取等副作用操作。 可以在 "),s("code",[t._v("useEffect")]),t._v(" 的函数中返回一个函数做清除操作。这个清除操作时可选的:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一个参数是函数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第二个参数是函数内所依赖的外部变量数组。若没有外部依赖，则可以忽略第二个参数。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useEffect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" handleClick"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// useEffect 回调函数的返回值是函数的话，当组件卸载时会执行该函数")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 若没有需要清除的东西，则可以忽略这一步骤")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" handleClick"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("handleClick"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("useContext")]),t._v(": 接收一个 "),s("code",[t._v("Context")]),t._v(" 对象，并返回 "),s("code",[t._v("Context")]),t._v(" 的当前值。相当于类组件的 "),s("code",[t._v("static contextType = MyContext")]),t._v("。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("useReducer")]),t._v(" 是 "),s("code",[t._v("useState")]),t._v(" 的代替方案，有点类似于 "),s("code",[t._v("redux")]),t._v(" 的工作方式。它通过函数来操作 state，适合 state 逻辑较为复杂且包含多个子值，或是下一个 state 依赖于旧的 state 的场景。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("useMemo")]),t._v(" 可以缓存变量的值，避免每次组件更新后都需要重复计算值。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("useCallbck")]),t._v(" 用于缓存函数，避免函数被重复创建。它是 "),s("code",[t._v("useMemo")]),t._v(" 的语法糖，"),s("code",[t._v("useCallback(fn, deps)")]),t._v(" 相当于是 "),s("code",[t._v("useMemo(() => fn, deps)")]),t._v("。")])])]),t._v(" "),s("h3",{attrs:{id:"自定义-hook-怎么使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义-hook-怎么使用"}},[t._v("#")]),t._v(" 自定义 Hook 怎么使用")]),t._v(" "),s("p",[t._v("自定义 Hook 的命名规则是以 "),s("code",[t._v("use")]),t._v(" 开头的函数，比如 "),s("code",[t._v("useLocalStorage")]),t._v(" 就符合自定义 Hook 的命名规范。\n使用自定义 Hook 的场景有很多，如表单处理、动画、订阅声明、定时器等等可复用的逻辑都能通过自定义 Hook 来抽象实现。")]),t._v(" "),s("p",[t._v("在自定义 Hook 中，可以使用 Hooks 函数将可复用的逻辑和功能提取出来，并将内部的 "),s("code",[t._v("state")]),t._v(" 或操作的方法从自定义 Hook 函数中返回出来。函数组件使用时就可以像调用普通函数一祥调用自定义 Hook 函数, 并将自定义 Hook 返回的 "),s("code",[t._v("state")]),t._v(" 和操作方法通过解构保存到变量中。")]),t._v(" "),s("p",[t._v("下面是 "),s("a",{attrs:{href:"https://usehooks.com/useLocalStorage/",target:"_blank",rel:"noopener noreferrer"}},[t._v("useLocalStorage"),s("OutboundLink")],1),t._v(" 的实现，它将 state 同步到本地存储，以使其在页面刷新后保持不变。 用法与 useState 相似，不同之处在于我们传入了本地存储键，以便我们可以在页面加载时默认为该值，而不是指定的初始值。")]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" useState "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Usage")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("App")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Similar to useState but first arg is key to the value in local storage.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useLocalStorage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Bob'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n      ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("placeholder")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("Enter your name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("onChange")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n    ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Hook")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useLocalStorage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" initialValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// State to store our value")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Pass initial state function to useState so logic is only executed once")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("storedValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setStoredValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Get from local storage by key")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("localStorage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getItem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Parse stored json or if none return initialValue")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" initialValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If error also return initialValue")]),t._v("\n      console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" initialValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Return a wrapped version of useState's setter function that ...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... persists the new value to localStorage.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("setValue")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Allow value to be a function so we have same API as useState")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" valueToStore "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n        value "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("storedValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Save state")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setStoredValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("valueToStore"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Save to local storage")]),t._v("\n      window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("localStorage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setItem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringify")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("valueToStore"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// A more advanced implementation would handle the error case")]),t._v("\n      console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("storedValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("注意: 自定义 Hook 函数在定义时，也可以使用另一个自定义 Hook 函数。")])]),t._v(" "),s("h3",{attrs:{id:"hook-使用约束"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hook-使用约束"}},[t._v("#")]),t._v(" Hook 使用约束")]),t._v(" "),s("ol",[s("li",[t._v("只能在"),s("strong",[t._v("函数组件最顶层")]),t._v("调用 Hook，不能在循环、条件判断或子函数中调用。")]),t._v(" "),s("li",[t._v("只能在"),s("strong",[t._v("函数组件")]),t._v("或者是"),s("strong",[t._v("自定义 Hook 函数")]),t._v("中调用，普通的 js 函数不能使用。")])]),t._v(" "),s("h3",{attrs:{id:"hooks-怎么实现-class-组件的功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hooks-怎么实现-class-组件的功能"}},[t._v("#")]),t._v(" Hooks 怎么实现 class 组件的功能")]),t._v(" "),s("p",[t._v("Hooks 没有生命周期，但可以通过 Hook 来模拟生命周期的功能。")]),t._v(" "),s("h4",{attrs:{id:"constructor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#constructor"}},[t._v("#")]),t._v(" constructor")]),t._v(" "),s("p",[t._v("class 组件的构造函数一般是用于设置 state 或者给事件绑定 this 的。Hooks 中没有 this 指向的问题，而 state 可以通过 "),s("code",[t._v("useState")]),t._v("/"),s("code",[t._v("useReducer")]),t._v(" 来实现。")]),t._v(" "),s("h4",{attrs:{id:"getderivedstatefromprops"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getderivedstatefromprops"}},[t._v("#")]),t._v(" getDerivedStateFromProps")]),t._v(" "),s("p",[s("code",[t._v("getDerivedStateFromProps")]),t._v(" 用于在组件 props 变化时派生 "),s("code",[t._v("state")]),t._v("。可以通过 Hook 这样实现:")]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ScrollView")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("row"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("isScrollingDown"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setIsScrollingDown"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("prevRow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setPrevRow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("row "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" prevRow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Row 自上次渲染以来发生过改变。更新 isScrollingDown。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setIsScrollingDown")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prevRow "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" row "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" prevRow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setPrevRow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("row"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("Scrolling down: ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("isScrollingDown"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"shouldcomponentupdate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shouldcomponentupdate"}},[t._v("#")]),t._v(" shouldComponentUpdate")]),t._v(" "),s("p",[s("code",[t._v("shouldComponentUpdate")]),t._v(" 可以根据 "),s("code",[t._v("props")]),t._v("/"),s("code",[t._v("state")]),t._v(" 的新旧值变化决定是否更新组件，在函数组件中可以使用 "),s("code",[t._v("React.memo")]),t._v(" 达到同样的效果。")]),t._v(" "),s("p",[s("code",[t._v("React.memo")]),t._v(" 默认只是浅比较 "),s("code",[t._v("props")]),t._v(" 的变化，它的第一个参数是函数组件，第二个参数是可选的自定义比较函数，用于来比较新旧 "),s("code",[t._v("props")]),t._v("。")]),t._v(" "),s("h4",{attrs:{id:"hooks-没有实现的生命周期钩子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hooks-没有实现的生命周期钩子"}},[t._v("#")]),t._v(" Hooks 没有实现的生命周期钩子")]),t._v(" "),s("ul",[s("li",[t._v("getSnapshotBeforeUpdate")]),t._v(" "),s("li",[t._v("getDerivedStateFromError")]),t._v(" "),s("li",[t._v("componentDidCatch")])]),t._v(" "),s("h4",{attrs:{id:"如何强制更新-hook-组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何强制更新-hook-组件"}},[t._v("#")]),t._v(" 如何强制更新 Hook 组件?")]),t._v(" "),s("p",[t._v("可以设置一个"),s("strong",[t._v("没有实际作用")]),t._v("的 "),s("code",[t._v("state")]),t._v("，然后强制更新 "),s("code",[t._v("state")]),t._v(" 的值触发渲染。")]),t._v(" "),s("h4",{attrs:{id:"类实例成员变量如何映射到-hooks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类实例成员变量如何映射到-hooks"}},[t._v("#")]),t._v(" 类实例成员变量如何映射到 Hooks?")]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("useRef")]),t._v(" 设置可变数据。")]),t._v(" "),s("h4",{attrs:{id:"hook-中如何获取旧的-props-和-state"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hook-中如何获取旧的-props-和-state"}},[t._v("#")]),t._v(" Hook 中如何获取旧的 props 和 state")]),t._v(" "),s("p",[t._v("可以通过 "),s("code",[t._v("useRef")]),t._v(" 来保存数据，因为渲染时不会覆盖掉 ref。")]),t._v(" "),s("h3",{attrs:{id:"有了解过-portals-吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有了解过-portals-吗"}},[t._v("#")]),t._v(" 有了解过 Portals 吗?")]),t._v(" "),s("p",[s("code",[t._v("Portals")]),t._v(" 就像个传送门，它可以将子节点渲染到存在于父组件以外的 DOM 节点的方案。")]),t._v(" "),s("p",[t._v("比如 "),s("code",[t._v("Dialog")]),t._v(" 是一个全局组件，按照传统渲染组件的方式，"),s("code",[t._v("Dialog")]),t._v(" 可能会受到其容器 css 的影响。因此可以使用 "),s("code",[t._v("Portals")]),t._v(" 让组件在视觉上渲染到 "),s("code",[t._v("<body>")]),t._v(" 中，使其样式不受 "),s("code",[t._v("overflow: hidden")]),t._v(" 或 "),s("code",[t._v("z-index")]),t._v(" 的影响。")]),t._v(" "),s("h3",{attrs:{id:"什么是-react-fiber"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是-react-fiber"}},[t._v("#")]),t._v(" 什么是 React Fiber?")]),t._v(" "),s("p",[t._v("Fiber 是 React 16 中新的"),s("strong",[t._v("协调引擎或重新实现核心算法")]),t._v("。它的主要目标是"),s("strong",[t._v("支持虚拟DOM的增量渲染")]),t._v("。React Fiber 的目标是提高其在动画、布局、手势、暂停、中止或重用等方面的适用性，并为不同类型的更新分配优先级，以及新的并发原语。")]),t._v(" "),s("p",[t._v("它的主要特性是增量渲染:能够将渲染工作分割成块，并将其分散到多个帧中。")]),t._v(" "),s("h3",{attrs:{id:"怎么对组件的参数做类型约束呢"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#怎么对组件的参数做类型约束呢"}},[t._v("#")]),t._v(" 怎么对组件的参数做类型约束呢?")]),t._v(" "),s("p",[t._v("要对组件的参数做类型约束的话，可以引入 "),s("code",[t._v("prop-types")]),t._v(" 来配置对应的 "),s("code",[t._v("propTypes")]),t._v(" 属性。"),s("br"),t._v(" "),s("code",[t._v("Flow")]),t._v(" 和 "),s("code",[t._v("TypesScript")]),t._v(" 则可以对整个应用做类型检查。")]),t._v(" "),s("h3",{attrs:{id:"组件设计原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件设计原则"}},[t._v("#")]),t._v(" 组件设计原则")]),t._v(" "),s("ul",[s("li",[t._v("从功能上拆分组件")]),t._v(" "),s("li",[t._v("组件功能原子化")]),t._v(" "),s("li",[t._v("容器组件只管数据，UI 组件只管视图")]),t._v(" "),s("li",[t._v("可复用、易用、直观")]),t._v(" "),s("li",[t._v("组件库可以遵循 "),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles",target:"_blank",rel:"noopener noreferrer"}},[t._v("ARIA"),s("OutboundLink")],1),t._v(" 规范")])]),t._v(" "),s("h2",{attrs:{id:"redux"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redux"}},[t._v("#")]),t._v(" Redux")]),t._v(" "),s("h3",{attrs:{id:"什么场景会考虑使用状态管理器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么场景会考虑使用状态管理器"}},[t._v("#")]),t._v(" 什么场景会考虑使用状态管理器")]),t._v(" "),s("p",[t._v("从使用的角度:")]),t._v(" "),s("ol",[s("li",[t._v("用户的使用方式复杂")]),t._v(" "),s("li",[t._v("不同身份的用户有不同的使用方式 (区分普通用户和 admin)")]),t._v(" "),s("li",[t._v("多个用户之间可以协作")]),t._v(" "),s("li",[t._v("与服务器大量交互，或使用了 websocket")]),t._v(" "),s("li",[t._v("view 要从多个来源获取数据")])]),t._v(" "),s("p",[t._v("从组件的角度来看:")]),t._v(" "),s("ol",[s("li",[t._v("某个组件的状态需要共享")]),t._v(" "),s("li",[t._v("某个状态需要在任何地方都可以拿到")]),t._v(" "),s("li",[t._v("一个组件需要改变全局状态")]),t._v(" "),s("li",[t._v("一个组件需要改变另一个组件的状态")])]),t._v(" "),s("h3",{attrs:{id:"redux是什么-它遵循什么原则吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redux是什么-它遵循什么原则吗"}},[t._v("#")]),t._v(" redux是什么? 它遵循什么原则吗?")]),t._v(" "),s("p",[t._v("Redux 是状态容器与数据流管理。它的三大原则是:")]),t._v(" "),s("ul",[s("li",[t._v("单一数据源")]),t._v(" "),s("li",[t._v("状态不可变")]),t._v(" "),s("li",[t._v("纯函数 (无副作用函数) 修改状态")])]),t._v(" "),s("h3",{attrs:{id:"描述-redux-单向数据流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#描述-redux-单向数据流"}},[t._v("#")]),t._v(" 描述 redux 单向数据流")]),t._v(" "),s("ol",[s("li",[t._v("Redux 内部维护一个 "),s("code",[t._v("state")]),t._v(" 数据。这个 "),s("code",[t._v("state")]),t._v(" 数据只能通过 "),s("code",[t._v("dispatch")]),t._v(" 派生 "),s("code",[t._v("action")]),t._v(" 事件才能修改。")]),t._v(" "),s("li",[t._v("若 Redux 使用了中间件，先经过全部中间件处理")]),t._v(" "),s("li",[s("code",[t._v("dispatch")]),t._v(" 触发事件后将 "),s("code",[t._v("action")]),t._v(" 事件和当前的 "),s("code",[t._v("state")]),t._v(" 数据传入给 "),s("code",[t._v("reducer")]),t._v("，由 "),s("code",[t._v("reducer")]),t._v(" 对事件进行处理并返回更新后 "),s("code",[t._v("state")]),t._v(" 数据。")]),t._v(" "),s("li",[s("code",[t._v("reducer")]),t._v(" 的返回值将用于更新 "),s("code",[t._v("state")]),t._v(" 数据")]),t._v(" "),s("li",[t._v("如果需要获取 "),s("code",[t._v("state")]),t._v(" 更新后的数据，可以调用 "),s("code",[t._v("subscribe")]),t._v(" 方法，传递一个监听函数来订阅数据的变化。当数据更新后将会调用每个监听函数。")]),t._v(" "),s("li",[t._v("将获取到的 "),s("code",[t._v("state")]),t._v(" 数据渲染到视图中。")])])])}),[],!1,null,null,null);a.default=n.exports}}]);